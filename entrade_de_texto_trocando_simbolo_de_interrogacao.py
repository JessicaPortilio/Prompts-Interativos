# Importa a biblioteca InquirerPy para interagir com o usu√°rio de forma simples
from InquirerPy import inquirer

# Importa a classe EmptyInputValidator para verificar se a entrada n√£o est√° vazia
from InquirerPy.validator import EmptyInputValidator

# Importa a classe Validator e ValidationError para criar regras de valida√ß√£o personalizadas
from prompt_toolkit.validation import Validator, ValidationError


# Cria uma pergunta interativa que pede o nome do usu√°rio
nome = inquirer.text(
    message="Qual √© o seu nome?",  # Mensagem que ser√° exibida na tela
    qmark="‚ùì",  # S√≠mbolo de pergunta
    amark="üñçÔ∏è",  # S√≠mbolo de resposta
    validate=EmptyInputValidator(message="O nome n√£o pode ser vazio!")  # Valida se o nome n√£o est√° vazio
).execute()  # Executa a intera√ß√£o com o usu√°rio e armazena a resposta

# Exibe o nome que o usu√°rio inseriu
print(f'Ol√°, {nome}')

# Cria uma classe personalizada para validar se o nome tem pelo menos 3 caracteres
class NomeValidator(Validator):
    def validate(self, document):  # M√©todo que valida a entrada do usu√°rio
        text = document.text.strip()  # Remove espa√ßos extras do come√ßo e do final do texto

        if len(text) < 3:  # Se o texto tiver menos de 3 caracteres
            # Levanta um erro de valida√ß√£o com uma mensagem e posiciona o cursor no final do texto
            raise ValidationError(
                message="O nome deve ter pelo menos 3 caracteres!",  # Mensagem de erro
                cursor_position=len(text)  # Posiciona o cursor ap√≥s o texto digitado
            )

# Cria outra pergunta interativa, agora com a valida√ß√£o do comprimento do nome
nome2 = inquirer.text(
    message="Qual √© o seu nome?",  # Mensagem que ser√° exibida na tela
    qmark="‚ùì",  # S√≠mbolo de pergunta
    amark="üñçÔ∏è",  # S√≠mbolo de resposta
    validate=NomeValidator()  # Valida√ß√£o personalizada que verifica se o nome tem pelo menos 3 caracteres
).execute()  # Executa a intera√ß√£o com o usu√°rio e armazena a resposta

# Exibe o nome que o usu√°rio inseriu ap√≥s a valida√ß√£o
print(f'Ol√°, {nome2}')
